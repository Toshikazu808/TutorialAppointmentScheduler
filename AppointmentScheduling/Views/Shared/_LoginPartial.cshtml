@inject Microsoft.AspNetCore.Identity.SignInManager<AppointmentScheduling.Models.ApplicationUser> signInManager
@* This is the default implementation of IdentityUser that comes when you use the ASP.NET Identity *@

@if (signInManager.IsSignedIn(User))
{
    <form method="post" id="logoutForm" asp-action="Logoff" asp-controller="Account">
        <ul class="nav navbar-nav">
            <li class="text-white nav-link">Hello, @User.Identity.Name!</li> @* This is not the name of the user, but the email address *@
            <li><a class="text-white nav-link" href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    </form>
}
else
{
<ul class="nav navbar-nav">
    @* These are html helpers.  Good to know that we hav them in case we want to use them,
        but tag helpers are more recent so we will use those instead *@
    @*<li>@Html.ActionLink("Sign Up", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>*@
    @*<li>@Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>*@

    <li class="nav-item">
        <a class="nav-link text-white" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" id="loginLink" asp-controller="Account" asp-action="Login">Sign In</a>
    </li>
</ul>
}